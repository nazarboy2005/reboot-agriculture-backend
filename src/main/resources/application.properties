# Application Configuration
spring.application.name=agriculture-backend
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Server Configuration
server.port=${PORT:8080}
# server.servlet.context-path=/api  # Commenting this out to avoid path conflicts

# Database Configuration - Supabase (Production) / H2 (Development)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://aws-1-eu-north-1.pooler.supabase.com:6543/postgres?sslmode=require&prepareThreshold=0}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:postgres.uedutnqhqctxmcbuldfq}
spring.datasource.password=${DB_PASSWORD:Nazarboy2005}

# HikariCP Connection Pool Configuration - Optimized for Supabase
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=3000

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Database configuration complete

# External API Configuration
app.weather.api.key=${WEATHER_API_KEY:your-openweathermap-api-key}
app.weather.api.url=https://api.openweathermap.org/data/3.0/onecall
app.nasa.api.url=https://power.larc.nasa.gov/api/temporal/hourly/point
app.nasa.api.key=${NASA_API_KEY:Efk5PkYmY2GuNBqHaoaTLbKUaUNmG8FicACtQp42}

# Twilio Configuration - Commented out for now, will be added later
# app.twilio.account.sid=${TWILIO_ACCOUNT_SID:your-twilio-account-sid}
# app.twilio.auth.token=${TWILIO_AUTH_TOKEN:your-twilio-auth-token}
# app.twilio.phone.number=${TWILIO_PHONE_NUMBER:+1234567890}

# Scheduler Configuration
app.scheduler.daily-recommendation.cron=0 0 6 * * ?
app.scheduler.enabled=true

# Logging Configuration
logging.level.com.hackathon.agriculture_backend=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.mail.enabled=false

# Google OAuth2 Configuration (only if credentials are provided)
# OAuth2 auto-configuration is disabled by default to prevent startup issues
# To enable OAuth2, set GOOGLE_OAUTH_ENABLED=true and provide GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration

# OAuth2 properties (only used when OAuth2 is enabled via environment variables)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# spring.security.oauth2.client.registration.google.redirect-uri=https://reboot-agrismart-1077945709935.europe-west1.run.app/api/login/oauth2/code/google

# JWT Configuration
app.jwt.secret=${JWT_SECRET:mySecretKeyForJWTTokenGenerationThatIsSecureAndLongEnoughForHMAC}
app.jwt.expiration=86400000

# Gemini AI Configuration
app.gemini.api.key=${GEMINI_API_KEY:AIzaSyALbmcSq_v5z9YBvaw_gJPiHLFjnOuCl-U}
app.gemini.model.name=gemini-2.5-flash
app.gemini.max.tokens=8192
app.gemini.temperature=0.7
app.gemini.timeout=120000

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=killiyaezov@gmail.com
spring.mail.password=wmyahtxvziwqsdly
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.ssl.checkserveridentity=true
spring.mail.properties.mail.smtp.ssl.required=false
spring.mail.properties.mail.smtp.ssl.enable=false
spring.mail.properties.mail.debug=false

# Application Email Configuration
app.email.from=killiyaezov@gmail.com
app.email.enabled=true
app.frontend.url=https://reboot-agriculture-frontend.vercel.app
app.token.email-confirmation.expiry=24
app.token.password-reset.expiry=1

# Plant.id API Configuration
plantid.api-keys=${PLANTID_API_KEYS:3Ns5dS6ozmChacR4I56pX6FA8O6UQfXhIhLA79TGhHVTXpcBpd}
plantid.endpoint=https://api.plant.id/v3/health_assessment
plantid.timeout=30000

# Insect.id API Configuration
insect.api-key=${INSECT_API_KEY:}
insect.endpoint=https://insect.kindwise.com/api/v1/identification
insect.timeout=30000

# Plant.id API - for plant disease detection
plant.id.api.key=${PLANT_ID_API_KEY}

# Insect.id API - for pest detection
insect.id.api.key=${INSECT_ID_API_KEY}

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.location=${java.io.tmpdir}

# File Cleanup Configuration
app.cleanup.enabled=true
app.cleanup.max-storage-mb=100
app.cleanup.max-file-age-hours=24

# CORS Configuration
cors.allowedOrigins=https://reboot-agriculture-frontend.vercel.app
cors.allowedMethods=GET,POST,PUT,DELETE,OPTIONS
cors.allowedHeaders=*
cors.allowCredentials=true
cors.maxAge=3600
